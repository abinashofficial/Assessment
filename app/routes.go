// @title           BRB Microservice API
// @version         1.0
// @description     Mid-Level Backend Assessment Microservice for BRB.

// @host      localhost:8080
// @BasePath  /api

package app

import(
	"Assessment/handlers"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
	"github.com/swaggo/gin-swagger" // gin-swagger middleware
	"github.com/swaggo/files" // swagger embed files
	_ "Assessment/docs" // docs is generated by Swag CLI, you have to import it.
	"Assessment/config"
)


func runServer(r *gin.Engine, db *gorm.DB, h handlers.Store) {

	// Middlewares
	r.Use(RateLimiterMiddleware())

	// Health
	r.GET("/health", config.HealthCheck(db))

	// Swagger
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

		// API Routes
		api := r.Group("/api")
		{
			service := api.Group("/services")
			{
				service.Use(AdminOnly())
				service.POST("/", h.ServiceHandler.CreateService)
				service.PUT("/:id", h.ServiceHandler.UpdateService)
				service.PATCH("/:id/toggle", h.ServiceHandler.ToggleService)
			}

			vendor := api.Group("/vendors")
			{
				vendor.Use(AdminOnly())
				vendor.POST("/", h.VendorHandler.CreateVendor)
			}

			booking := api.Group("/bookings")
			{
				booking.POST("/", h.BookingHandler.CreateBooking)
				booking.GET("/", h.BookingHandler.ListBookings)
			}
			summary := api.Group("/summary")
			{
				summary.Use(AdminOnly())
				summary.GET("/vendor/:id", h.BookingHandler.VendorSummary)
			}
		}


	r.Run(":8080")
}